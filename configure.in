dnl Process this file with autoconf to produce a configure script.
AC_INIT(htpl.c)
[
clear
cat <<EOM

Welcome to HTPL installation.

EOM
]
AC_LANG_C
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_AWK

AB_PROG_PERL

AC_PATH_PROG(SENDMAIL, sendmail, , /usr/sbin:/usr/lib:/usr/ucb:$PATH)

AC_ARG_ENABLE(depdb, --enable-depdb		Include dependency database,
    AC_REQUIRE_CPP
    AC_CHECK_HEADER(db_185.h, 
        AC_CHECK_LIB(db, dbopen, [ DEPDBDEF="-D__DEPEND_DB__" 
echo "Compiling with dependency database"
], [
echo "Library libdb.a not found"
exit
        ]), [
echo "Header db_185.h not found"
exit
    ]), DEPDBDEF= )
AC_ARG_WITH(temp, --with-temp=TEMP	Temp directory, TEMP=$withval,
TEMP=/tmp)
AC_MSG_CHECKING(if you have an XML parser as well as Lex and Yapp parsers)
[
XML=
$PERL -MXML::Parser -MParse::Lex -MParse::Yapp -e "" 2> /dev/null && XML=1
if [ -z "$XML" ]; then
    echo "no"
else
    echo "yes"
fi
if [ -z "$PRERUN" ]; then
]
AC_MSG_CHECKING(if you are running as superuser)
[
if [ "$USER" = "root" ]; then
    echo "yes"
    ROOT=1
else
    echo "no"
    ROOT=
fi
fi
]
CFLAGS=`$PERL -MExtUtils::Embed -e ccopts -e ldopts`
LIBS="-lperl"
AC_MSG_CHECKING(for embedded Perl)
AC_TRY_RUN( [
#include "htpl.h"
#include <EXTERN.h>
#include <perl.h>
static PerlInterpreter *my_perl;

int main(int argc, char **argv, char **env) {
               int argc;
               char *argvv[3];
               char *myself = "htpl.cgi";
               argc = 2;
               argvv[0] = myself;
               argvv[1] = "-e exit(0);';";
               my_perl = perl_alloc();
               perl_construct(my_perl);
               perl_parse(my_perl, NULL, argc, argvv, (char **)NULL);
               perl_run(my_perl);
               perl_destruct(my_perl);
               perl_free(my_perl);
               exit(0);
           }

], [ echo yes; OBJEMBED="htpl-xsi.c htpl-perl.c" ],
[ echo no; OBJEMBED= ], 
[ echo no; OBJEMBED= ])
AC_MSG_CHECKING(if users can write in "$PRERUN"$TEMP)

[


FN="$$ `date` htpl setup"
FN="$PRERUN"$TEMP"/"`echo $FN | sed 's/ /_/g'`

if [ -n "$ROOT" ]; then
    su nobody -c "touch $FN" 2> /dev/null
else
    touch $FN 2> /dev/null
fi

if [ -f $FN ]; then
    rm $FN
    echo "yes"
else
    TEMP=
    echo "no"
fi

]

AC_ARG_ENABLE(modperl, --enable-modperl	Install ModPerl support, [

[
    if [ -z "$ROOT" ]; then
        echo "ModPerl support must be installed as superuser"
        exit
    fi
    if [ -n "$DEPDBDEF" ]; then
        echo "Dependency database and ModPerl support can't be used together"
        echo "If you are running HTPL in ModPerl, Dependency database is unneeded"
        exit
    fi
    echo "Compiling with ModPerl support"
    MODPERL=mod_perl
]
], MODPERL=)

[ 
HTTPDROOT=""
if [ -z "$ROOT" ] && [ -z "$PRERUN" ]; then
    MODMAKE=build-it
    MODINS=install-it
    CPANMAKE=CPAN-it
    MODDIR="\$(INSTALLDIR)"
    echo ""
else
    MODINS=install-root
    CPANMAKE=CPAN-root
    DEFH=
    if [ -n "$ROOT" ]; then
        MODMAKE=build-root
]
    AC_CHECK_FILES(/etc/rc.d/init.d/httpd /etc/rc.d/init.d/httpsd,
        HTTPD_RC=$ac_file; break, [])
[
    if [ -n "$HTTPD_RC" ] && [ -f "$HTTPD_RC" ]; then
        HTTPD=`$AWK -F'=' '($1 == "HTTPD") {print $2; exit}' < $HTTPD_RC`
    else
]
        AC_PATH_PROGS(HTTPD, httpd, , /usr/sbin:/usr/local/bin:$PATH)
[
    fi
    if [ -n "$HTTPD" ] && [ -x "$HTTPD" ]; then
        DEFH=`$HTTPD -V | sed 's/^ *-D *//' | $AWK -F'=' '($1 == "HTTPD_ROOT") {print $2; exit}'`
        DEFH=`echo $DEFH | sed 's/^"\(.*\)"$/\1/'`
    fi
    else
        MODMAKE=build-it
    fi
    for try in /home/httpd /usr/local/apache /usr/local/etc/apache \
      /var/www /usr/local/www /usr/local/etc/www /usr/local/stronghold \
          /usr/local/httpd /usr/local/etc/httpd ; do 
        if [ -n "$DEFH" ]; then
            break
        fi 
        if [ -d $PRERUN"$try" ] ; then
            DEFH="$try"
        fi
    done
    echo ""
    echo "Enter your httpd root"
    echo -n "Default ["$PREDISP"$DEFH] "
    read HTTPDROOT
    if [ -z "$HTTPDROOT" ]; then
        HTTPDROOT=$DEFH
    fi
fi

HTDOCS=""
if [ -n "$HTTPDROOT" ] ; then
    DEFAULT="$HTTPDROOT"/htdocs
    if [ ! -d "$PRERUN"$DEFAULT ]; then
        DEFAULT=$HTTPDROOT"/html"
    fi
else
    DEFAULT=
    for dir in public_html public_www html www . ; do
        if [ -z "$DEFAULT" ] && [ -d "$HOME/$dir" ]; then
            DEFAULT=$HOME/$dir
        fi
    done
fi
NEXTDEF=$DEFAULT
DEFAULT=$DEFAULT"/htpl"
echo Enter the name of the documents directory where HTPL should install sample files and access scripts
echo -n "Default ["$PREDISP"$DEFAULT] "
read HTDOCS
if [ -z "$HTDOCS" ] ; then
    HTDOCS=$DEFAULT
fi

if [ -n "$HTTPDROOT" ]; then
    DEFAULT=$HTTPDROOT"/cgi-bin"
else
    DEFAULT=$NEXTDEF
    if [ ! -d $DEFAULT"/cgi-bin" ]; then
        DEFAULT=`echo $DEFAULT | sed 's/\/[^/]*$//'`;
    fi
    DEFAULT=$DEFAULT"/cgi-bin"
fi

echo Enter the name of the cgi-bin directory where HTPL should be installed
echo -n "Default ["$PREDISP"$DEFAULT] "
read INSTALLDIR
if [ -z "$INSTALLDIR" ] ; then
    INSTALLDIR=$DEFAULT
fi


if [ -n "$HTTPDROOT" ]; then
    DEFAULT=$HTTPDROOT"/conf/httpd.conf"
else
    DEFAULT=$NEXTDEF"/.htaccess"
fi


echo Enter the name of the config file for your web site
echo -n "Default ["$PREDISP"$DEFAULT] "
read HTCONF
if [ -z "$HTCONF" ] ; then
    HTCONF=$DEFAULT
fi


if [ -n "$HTTPDROOT" ]; then
    DEFAULT=$HTTPDROOT"/logs/htpl_log"
else
    DEFAULT=$NEXTDEF"/.htpl.log"
fi


echo Enter the name of the system log file 
echo -n "Default ["$PREDISP"$DEFAULT] "
read HTLOGS
if [ -z "$HTLOGS" ] ; then
    HTLOGS=$DEFAULT
fi

]

[

if [ ! -e htpl-author.ego ] ; then

echo  Do you want to send me a short message notifying me of the
echo -n "installation at your site? [y] "
read isego
if [ "$isego" = "no" ] || [ "$isego" = "n" ] ; then
    EGO=
else
    EGO=htpl-author.ego
fi

fi
]



LIBS=
CFLAGS=

CCPROG=`which $CC`

[
if [ -n "$PRERUN" ]; then
    PERL=`echo $PERL | sed -e s!^$PRERUN!!`
fi
]

AC_SUBST(PERL)
AC_SUBST(CC)
AC_SUBST(PRERUN)
AC_SUBST(CCPROG)
AC_SUBST(INSTALL)
AC_SUBST(MODMAKE)
AC_SUBST(CPANMAKE)
AC_SUBST(MODINS)
AC_SUBST(OBJEMBED)
AC_SUBST(INSTALLDIR)
AC_SUBST(EGO)
AC_SUBST(TEMP)
AC_SUBST(XML)
AC_SUBST(HTDOCS)
AC_SUBST(HTCONF)
AC_SUBST(HTLOGS)
AC_SUBST(DEPDBDEF)
AC_SUBST(MODPERL)
AC_SUBST(MODDIR)
AC_OUTPUT([Makefile htpl-config.pl perl.sh HTPL-modules/lib/HTML/HTPL/Config.pm
              htplp htreporter htplsrvc htpgen htplss],
[ chmod +x htplp htreporter htplsrvc htpgen htplss])

clear
$PERL -e 'print chr(7);'
echo "Now issue the commands:"
echo "make"
echo "make install"
echo "make build"
echo "You can fetch useful modules from CPAN by issuing the command:"
echo "make CPAN"
